{"version":3,"sources":["firebase.js","components/News/styledComponents.js","components/Post/styledComponents.js","components/Post/Post.js","components/News/News.js","components/Subscribe/styledComponents.js","components/Subscribe/Subscribe.js","App/App.js","serviceWorker.js","index.js","assets/tempest-cup-promo.jpg"],"names":["firebase","NewsLayout","styled","div","_templateObject","Title","h3","_templateObject2","PostLayout","a","styledComponents_templateObject","h4","styledComponents_templateObject2","Image","img","_templateObject3","Post","_ref","image","title","href","react_default","createElement","target","rel","styledComponents_Title","defaultProps","undefined","News","components_Post_Post","src","tempest","alt","SubscribeLayout","Subscribe_styledComponents_templateObject","Presentation","Subscribe_styledComponents_templateObject2","Form","form","styledComponents_templateObject3","Input","input","_templateObject4","Button","button","_templateObject5","ConfirmationLabel","p","_templateObject6","Subscribe","_useState","useState","_useState2","Object","slicedToArray","email","setEmail","_useState3","_useState4","username","setUsername","_useState5","_useState6","isFormSubmitted","setFormSubmitted","onSubmit","event","preventDefault","name","onChange","value","placeholder","type","required","className","onClick","length","firestore","collection","doc","set","add","disabled","App","react","Subscribe_Subscribe","components_News_News","Boolean","window","location","hostname","match","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ReactDOM","render","src_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.e686d782.chunk.js","sourcesContent":["export function initFirebase() {\n  // Initialize Firebase\n  const config = {\n    apiKey: 'AIzaSyCtSCRnzTPWoAH9PEPN8OeRjvvS2gNS19Q',\n    authDomain: 'my-project-1501757537357.firebaseapp.com',\n    databaseURL: 'https://my-project-1501757537357.firebaseio.com',\n    projectId: 'my-project-1501757537357',\n    storageBucket: 'my-project-1501757537357.appspot.com',\n    messagingSenderId: '966018306178',\n  };\n\n  firebase.initializeApp(config); // eslint-disable-line no-undef\n}\n\nexport default firebase; // eslint-disable-line no-undef\n","import styled from 'styled-components';\n\nexport const NewsLayout = styled.div`\n  background-color: #fff;\n  padding: 2rem;\n\n  @media screen and (max-width: 800px) {\n    width: calc(100% - 4rem);\n  }\n\n  @media screen and (min-width: 800px) {\n    float: right;\n    height: calc(100% - 4rem);\n    width: calc(25% - 4rem);\n  }\n`;\n\nexport const Title = styled.h3`\n  margin: 1rem 0;\n`;\n","import styled from 'styled-components';\n\nexport const PostLayout = styled.a`\n  background: #ededed;\n  border-left: 0.25rem solid #639fbf;\n  color: inherit;\n  display: block;\n  padding: 1rem;\n  transition: all 0.25s;\n  width: calc(100% - 2rem);\n\n  &:hover {\n    opacity: 0.875;\n  }\n`;\n\nexport const Title = styled.h4`\n  margin: 0.5rem 0 1.5rem;\n  max-width: 100%;\n`;\n\nexport const Image = styled.img`\n  max-width: 100%;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { PostLayout, Image, Title } from './styledComponents';\n\nconst Post = ({ image, title, href }) => (\n  <PostLayout href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n    <Title>{title}</Title>\n    <Image {...image} />\n  </PostLayout>\n);\n\nPost.defaultProps = {\n  href: undefined,\n  image: {},\n  title: '',\n};\n\nPost.propTypes = {\n  href: PropTypes.string,\n  image: PropTypes.shape({\n    alt: PropTypes.string,\n    src: PropTypes.string,\n  }),\n  title: PropTypes.string,\n};\n\nexport default Post;\n","import React from 'react';\n\nimport tempest from '../../assets/tempest-cup-promo.jpg';\n\nimport { NewsLayout, Title } from './styledComponents';\nimport Post from '../Post';\n\nconst News = () => (\n  <NewsLayout>\n    <Title>Derni√®res News :</Title>\n    <Post\n      href=\"https://silph.gg/tempest-cup\"\n      title=\"La Coupe Temp√™te ! ~üå™ 1er Mars - 31 Mars üå™\"\n      image={{ src: tempest, alt: 'tempest cup promo' }}\n    />\n  </NewsLayout>\n);\n\nexport default News;\n","import styled from 'styled-components';\n\nexport const SubscribeLayout = styled.div`\n  background-color: #282c34;\n  color: white;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  p {\n    font-size: 1.25rem;\n    margin: 0.5rem 0;\n  }\n\n  @media screen and (max-width: 800px) {\n    padding: 4rem 2rem 0;\n    width: calc(100% - 4rem);\n  }\n\n  @media screen and (min-width: 800px) {\n    float: left;\n    height: 100%;\n    padding: 0 2rem;\n    width: calc(75% - 4rem);\n  }\n`;\n\nexport const Presentation = styled.div`\n  margin: 2rem 0;\n  max-width: 54rem;\n`;\n\nexport const Form = styled.form`\n  margin: 1rem 0 4rem;\n  position: relative;\n`;\n\nexport const Input = styled.input`\n  align-items: center;\n  appearance: none;\n  border-radius: 0.5rem;\n  border: none;\n  box-shadow: none;\n  display: flex;\n  font-size: 1rem;\n  height: 3rem;\n  padding: 0 1rem;\n\n  @media screen and (max-width: 800px) {\n    &:first-of-type {\n      margin-bottom: 0.5rem;\n      width: calc(100% - 2rem);\n    }\n\n    &:last-of-type {\n      margin: 0.5rem 0;\n      width: calc(100% - 2rem);\n    }\n  }\n\n  @media screen and (min-width: 800px) {\n    &:first-of-type {\n      float: left;\n      margin-right: 0.5rem;\n      width: calc(25% - 2.5rem);\n    }\n\n    &:last-of-type {\n      float: right;\n      margin-left: 0.5rem;\n      width: calc(75% - 2.5rem);\n    }\n  }\n`;\n\nexport const Button = styled.button`\n  align-items: center;\n  background: #639fbf;\n  border: none;\n  border-radius: 0.25rem;\n  display: flex;\n  color: #fff;\n  font-size: 1rem;\n  height: 2rem;\n  justify-content: center;\n  transition: all 0.5s;\n  width: 6rem;\n\n  &:disabled {\n    background-color: #c1c1c1;\n  }\n\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    opacity: 0.75;\n    outline: none;\n  }\n\n  @media screen and (max-width: 800px) {\n    margin-left: auto;\n  }\n\n  @media screen and (min-width: 800px) {\n    position: absolute;\n    right: 1rem;\n    top: 0.375rem;\n  }\n`;\n\nexport const ConfirmationLabel = styled.p`\n  && {\n    color: #639fbf;\n    float: right;\n    font-size: 0.875rem;\n    text-align: right;\n    transition: all 0.25s;\n    width: 100%;\n\n    &.hidden {\n      opacity: 0;\n      visibility: hidden;\n    }\n\n    &.visible {\n      opacity: 1;\n      visibility: visible;\n    }\n  }\n`;\n","import React, { useState } from 'react';\n\nimport { ConfirmationLabel, SubscribeLayout, Presentation, Form, Input, Button } from './styledComponents';\nimport firebase from '../../firebase';\n\nfunction Subscribe() {\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [isFormSubmitted, setFormSubmitted] = useState(false);\n\n  function registerUserMail() {\n    if (username.length !== 0) {\n      firebase\n        .firestore()\n        .collection('users')\n        .doc(username)\n        .set({ email });\n    } else {\n      firebase\n        .firestore()\n        .collection('users')\n        .add({ email });\n    }\n\n    setFormSubmitted(true);\n  }\n\n  return (\n    <SubscribeLayout>\n      <h1>Tournois Pokemon Go Bordeaux</h1>\n      <Presentation>\n        <p>\n          Ce site a √©t√© cr√©√© pour permettre aux joueurs de Pokemon Go sur Bordeaux et alentours de se regrouper afin de\n          participer √† des tournois de la{' '}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://silph.gg/\">\n            Silph Road\n          </a>\n          .\n        </p>\n        <p>\n          Si vous √™tes int√©ress√© par l{\"'\"}initiative, n{\"'\"}h√©sitez pas √† rejoindre{' '}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://discord.gg/mR25Vq\">\n            ce serveur discord\n          </a>{' '}\n          utilis√© pour l{\"'\"}organisation de potentiels tournois.\n        </p>\n      </Presentation>\n      <p>\n        Si tu souhaite t{\"'\"}inscrire pour participer √† un tournoi, n{\"'\"}h√©site pas √† rentrer ton pseudo et ton mail :\n      </p>\n      <Form onSubmit={event => event.preventDefault()}>\n        <Input\n          name=\"username\"\n          onChange={event => setUsername(event.target.value)}\n          placeholder=\"Pseudo (optionnel)\"\n          type=\"text\"\n        />\n        <Input\n          name=\"email\"\n          onChange={event => setEmail(event.target.value)}\n          placeholder=\"email\"\n          required\n          type=\"email\"\n        />\n        <ConfirmationLabel className={isFormSubmitted ? 'visible' : 'hidden'}>\n          ton inscription a bien √©t√© enregistr√©e\n        </ConfirmationLabel>\n        <Button type=\"submit\" onClick={registerUserMail} disabled={email.length === 0 || isFormSubmitted}>\n          s{\"'\"}inscrire\n        </Button>\n      </Form>\n    </SubscribeLayout>\n  );\n}\n\nexport default Subscribe;\n","import React, { Fragment } from 'react';\n\nimport { Subscribe, News } from '../components';\n\nconst App = () => (\n  <Fragment>\n    <Subscribe />\n    <News>\n      <h3>Derni√®res News :</h3>\n    </News>\n  </Fragment>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { initFirebase } from './firebase';\nimport './css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\ninitFirebase();\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/tempest-cup-promo.fe3cb030.jpg\";"],"sourceRoot":""}